---
// @ts-nocheck
import { getLangFromUrl, useTranslations, useTranslatedPath } from '../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

import type { The0 } from "../api/[id_property].json";

const urlSearch = "https://api.wasi.co/v1/property/search?";
const take = 100;

const options = {
  method: "POST",
    headers: {
      "Content-Type": "application/json; charset=UTF-8",
      Authentication: `Bearer ${import.meta.env.PUBLIC_ID_COMPANY}`,
    }
};

const res = await fetch(`${urlSearch}id_company=${import.meta.env.PUBLIC_ID_COMPANY}&wasi_token=${import.meta.env.PUBLIC_WASI_TOKEN}&take=${take}`, options);

const data = await res.json();

const properties = Object.keys(data)
  .filter(key => key !== 'total' && key !== 'status')
  .map(key => data[key]);


---
<script is:inline src="//cdnjs.cloudflare.com/ajax/libs/list.js/1.5.0/list.min.js"></script>

<script type="module" is:inline astro:page-load>
  // @ts-ignore
  var monkeyListSpanish = new List('property-list-spanish', {
  valueNames: ['titulo'],
  listClass: 'list-spanish',
  page: 6,
  pagination: true
});
</script>

<section id="property-list-spanish" class="py-5">
  <!-- Título del portafolio -->
  <h2 class="text-center text-xl md:text-3xl font-heading uppercase pb-10">
    {t("list.title")}
  </h2>

  <!-- Filtros y búsqueda -->
  <div class="mx-auto w-2/3 md:w-1/2 flex flex-col md:flex-row items-center justify-between gap-4 mb-8">
    <!-- Campo de búsqueda -->
    <input
      type="text"
      class="search w-full  border border-gray-300 rounded-lg p-2 text-xs focus:outline-none focus:ring focus:ring-green-500 font-pattern"
      placeholder={t("list.search")} />

  </div>

  
    <!-- Contenedor de propiedades -->
<div class="list-spanish grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3 p-5 sm:p-8">
  <!-- Cada propiedad -->
  {properties.map((property: The0) => (
    <div class="rounded-lg overflow-hidden shadow-lg transform transition duration-300 hover:scale-105 hover:shadow-2xl border-x-2 border-main/70">
      <a href={translatePath(`/property/${property.id_property}`)} class="block">
        <!-- Imagen de la propiedad -->
        <div class="relative">
          <img
            alt="Property Image"
            src={property.main_image.url_original}
            class="h-56 w-full object-cover"
          />
          <!-- Etiqueta de ubicación -->
          <div class="absolute top-2 right-2 bg-black bg-opacity-75 text-white text-xs px-3 py-1 rounded">
            <p class="font-display uppercase">{property.city_label}</p>
          </div>
        </div>

                                              <!-- Detalles de la propiedad -->
        <div class="p-4 bg-white">
                                              <!-- Título y precio -->
          <div class="mb-4">
            <h2 class="titulo text-lg font-medium font-heading text-gray-800 uppercase truncate">
              {property.title}
            </h2>
            <p class="text-sm text-gray-600 font-light font-display price uppercase ">
                  
              {
                property.for_sale === 'true' && property.sale_price_label && property.sale_price_label !== 0 ? (
                  <span>{t("list.sale-price")} {property.sale_price_label}</span>
                ) : property.for_rent === 'true' && property.rent_price_label && property.rent_price_label !== 0 ? (
                  <span>{t("list.rent-price")} {property.rent_price_label}</span>
                ) : null
              }
              

            </p>
          </div>
                                              <!-- Botón "View Property" -->
          <div class="flex items-center justify-between mt-4">
            <p class="text-xs text-gray-600 font-light font-display property-id">
              {property.id_property}
            </p>
  
                                              <!-- Botón "View Property" -->
            <div class="w-1/2 flex justify-end">
                <a
                  href={translatePath(`/property/${property.id_property}`)}
                  class="bg-main font-pattern uppercase p-2 text-xs rounded-md"
                >
                  {t("list.btn")}
                </a>
            </div>
          </div>        
        </div>
      </a>
    </div>
  ))}
</div>
<div class="flex items-center justify-center gap-3">
      
    
  <ul class="pagination flex gap-4 font-display font-light">

    </ul>
  
    
  </div>

  
</section>
