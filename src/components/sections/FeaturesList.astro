---
// @ts-nocheck
import { Icon } from 'astro-icon/components';


const urlGetFeatures = "https://api.wasi.co/v1/feature/all";

const options = {
  method: 'POST', 
  headers: {
    "Content-Type": "application/json; charset=UTF-8",
    Authentication: `Bearer ${import.meta.env.PUBLIC_ID_COMPANY}`,
  },
};
// @
let internal = [];
let external = [];

// Función para obtener las características desde la API
async function fetchFeature(params: Record<string, string | undefined>) {
  const propertyId = params.id_property;

  if (!propertyId) {
    console.error("No se proporcionó el ID de la propiedad.");
    return;
  }

  try {
    const response = await fetch(
      `${urlGetFeatures}?id_property=${propertyId}&id_company=${import.meta.env.PUBLIC_ID_COMPANY}&wasi_token=${import.meta.env.PUBLIC_WASI_TOKEN}`, options
    );
    if (!response.ok) {
      throw new Error(`Error en la solicitud: ${response.statusText}`);
    }
    const feature = await response.json();
    
      internal = feature.internal || [];
      external = feature.external || [];
  } catch (error) {
      console.error("Error al obtener las características:", error);
  }
}

// Llamar a la función con los parámetros disponibles
await fetchFeature(Astro.params);

---

<div class="p-5 max-w-5xl mx-auto">
  <!-- Título general -->
  <h2 class="text-2xl font-bold text-gray-800 mb-6">Características</h2>

  <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
    <!-- Características Internas -->
    <div>
      <h3 class="text-xl font-semibold text-gray-700 mb-4">Características Internas</h3>
      <ul class="space-y-3">
        {internal.length > 0 ? (
          internal.map((item) => (
            <li
              key={item.id}
              class="flex items-center space-x-3 bg-gray-50 p-3 rounded-lg shadow-md"
            >
              <div class="w-8 h-8 bg-[#60C11C] text-white rounded-full flex items-center justify-center text-sm font-semibold">
                <Icon name="check" />
              </div>
              <span class="text-gray-800">{item.nombre || item.name}</span>
            </li>
          ))
        ) : (
          <p class="text-gray-500">No hay características internas disponibles.</p>
        )}
      </ul>
    </div>

    <!-- Características Externas -->
    <div>
      <h3 class="text-xl font-semibold text-gray-700 mb-4">Características Externas</h3>
      <ul class="space-y-3">
        {external.length > 0 ? (
          external.map((item) => (
            <li
              key={item.id}
              class="flex items-center space-x-3 bg-gray-50 p-3 rounded-lg shadow-md"
            >
              <div class="w-8 h-8 bg-[#60C11C] text-white rounded-full flex items-center justify-center text-sm font-semibold">
                <Icon name="check" />
              </div>
              <span class="text-gray-800">{item.nombre || item.name}</span>
            </li>
          ))
        ) : (
          <p class="text-gray-500">No hay características externas disponibles.</p>
        )}
      </ul>
    </div>
  </div>
</div>