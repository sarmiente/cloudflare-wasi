---
// @ts-nocheck
const urlGetProperty = "https://api.wasi.co/v1/property/get/";

const options = {
  method: "POST",
  headers: {
    "Content-Type": "application/json; charset=UTF-8",
    Authentication: `Bearer ${import.meta.env.PUBLIC_ID_COMPANY}`,
  },
};

let property = null;

async function fetchProperty(params: Record<string, string | undefined>) {
  const propertyId = params.id_property;

  try {
    const response = await fetch(
      `${urlGetProperty}${propertyId}?id_company=${import.meta.env.PUBLIC_ID_COMPANY}&wasi_token=${import.meta.env.PUBLIC_WASI_TOKEN}`,
      options
    );
    property = await response.json();
  } catch (error) {
    console.error("Error fetching property:", error);
  }
}

// Llamar a la función con los parámetros disponibles
await fetchProperty(Astro.params);

// Convertir el objeto de galerías en un arreglo
const images = Object.values(property?.galleries?.[0] || {});

---

<script is:inline src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

<script is:inline >
  document.addEventListener('astro:page-load', () => {
    var swiper = new Swiper(".mySwiper", {
    loop: true,
    spaceBetween: 5,
    slidesPerView: 4,
    
    watchSlidesProgress: true,
  });
// @ts-ignore
  var swiper2 = new Swiper(".mySwiper2", {
    loop: true,
    spaceBetween: 15,
    navigation: {
      nextEl: ".swiper-button-next",
      prevEl: ".swiper-button-prev",
    },
    thumbs: {
      swiper: swiper,
    },
  });
  })
</script>


<section class="relative py-10">
  <div class="swiper mySwiper2 mx-auto max-w-screen-xl md:rounded-xl  py-8 sm:px-6 ">
    <div class="swiper-wrapper rounded-xl">
      <!-- Slider principal dinámico -->
      {images.filter(image => image.url_original).map((image, index) => (
        <div class="swiper-slide" key={index}>
          <img
            class="flex items-center justify-center text-white text-4xl font-bold w-full h-[60vh] object-cover"
            src={image.url_original}
            alt={`Project Cover ${index}`}
          />
        </div>
      ))}
    </div>
  </div>
<br>
  <!-- Miniaturas dinámicas -->
  <div class="swiper mySwiper max-w-screen-xl md:rounded-xl mx-auto">
    <div class="swiper-wrapper">
      {images.filter(image => image.url_original).map((image, index) => (
        <div class="swiper-slide" key={`thumb-${index}`}>
          <img
            class="cursor-pointer flex items-center justify-center text-4xl font-bold w-full h-[20vh] object-cover"
            src={image.url_original}
            alt={`Thumbnail ${index}`}
          />
        </div>
      ))}
    </div>
  </div>
</section>


