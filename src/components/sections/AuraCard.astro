---
const { title, image, features } = Astro.props;

import {
  getLangFromUrl,
  useTranslations,
} from "../../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);


// Puedes luego pasar `planDetails` como prop si este componente se reutiliza
const planDetails = [
  {
    title: "Aura Hotel Bar√∫",
    features: [t('feat.transport'), t('feat.cocktail'), t('feat.lunch'), 'Kayak', t('feat.facilities')],
  },
];
---

<article class="group flex rounded-md max-w-sm flex-col overflow-hidden border border-neutral-300 bg-neutral-50 text-neutral-600 dark:border-neutral-700 dark:bg-neutral-900 dark:text-neutral-300" style="-webkit-mask-image: -webkit-radial-gradient(white, black)">
  <!-- Carousel -->
  <div class="h-48 md:h-64 overflow-hidden">
    <div x-data="{
        slides: [
          { imgSrc: '/aura_one.svg', imgAlt: 'Aura Picture One' },
          { imgSrc: '/aura_two.svg', imgAlt: 'Aura Picture Two' },
          { imgSrc: '/aura_three.svg', imgAlt: 'Aura Picture Three' },
        ],
        currentSlideIndex: 1,
        previous() {
          this.currentSlideIndex = this.currentSlideIndex > 1 ? this.currentSlideIndex - 1 : this.slides.length;
        },
        next() {
          this.currentSlideIndex = this.currentSlideIndex < this.slides.length ? this.currentSlideIndex + 1 : 1;
        },
      }"
      class="relative w-full overflow-hidden"
    >
      <!-- Botones -->
      <button type="button" class="absolute left-5 top-1/2 z-20 flex rounded-full -translate-y-1/2 items-center justify-center bg-white/40 p-2 text-neutral-600 transition hover:bg-white/60 dark:bg-neutral-950/40 dark:text-neutral-300 dark:hover:bg-neutral-950/60" aria-label="Anterior" x-on:click="previous()">
        <svg xmlns="http://www.w3.org/2000/svg" class="size-5 md:size-6 pr-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="3"><path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5 8.25 12l7.5-7.5" /></svg>
      </button>

      <button type="button" class="absolute right-5 top-1/2 z-20 flex rounded-full -translate-y-1/2 items-center justify-center bg-white/40 p-2 text-neutral-600 transition hover:bg-white/60 dark:bg-neutral-950/40 dark:text-neutral-300 dark:hover:bg-neutral-950/60" aria-label="Siguiente" x-on:click="next()">
        <svg xmlns="http://www.w3.org/2000/svg" class="size-5 md:size-6 pl-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="3"><path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" /></svg>
      </button>

      <!-- Slides -->
      <div class="relative h-48 md:h-64 w-full">
        <template x-for="(slide, index) in slides">
          <div x-cloak x-show="currentSlideIndex == index + 1" class="absolute inset-0" x-transition.opacity.duration.300ms>
            <img class="absolute w-full h-full object-cover" :src="slide.imgSrc" :alt="slide.imgAlt" />
          </div>
        </template>
      </div>
    </div>
  </div>

  <!-- Content -->
  <div class="flex flex-col gap-4 p-6">
    {
      planDetails.map((item) => (
        <div class="flex flex-col gap-4">
          <h3 class="text-lg lg:text-xl font-bold font-heading text-neutral-900 dark:text-white">{item.title}</h3>
          <ul class="text-sm text-neutral-700 font-pattern list-disc list-inside">
            {
              item.features.map((feature) => (
                <li>{feature}</li>
              ))
            }
          </ul>
        </div>
      ))
    }
  </div>
</article>
